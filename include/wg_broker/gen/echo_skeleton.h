/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __ECHO_SKELETON_H__
#define __ECHO_SKELETON_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for example.EchoService */

#define TYPE_EXAMPLE_ECHO_SERVICE (example_echo_service_get_type ())
#define EXAMPLE_ECHO_SERVICE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_EXAMPLE_ECHO_SERVICE, ExampleEchoService))
#define IS_EXAMPLE_ECHO_SERVICE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_EXAMPLE_ECHO_SERVICE))
#define EXAMPLE_ECHO_SERVICE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_EXAMPLE_ECHO_SERVICE, ExampleEchoServiceIface))

struct _ExampleEchoService;
typedef struct _ExampleEchoService ExampleEchoService;
typedef struct _ExampleEchoServiceIface ExampleEchoServiceIface;

struct _ExampleEchoServiceIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_echo) (
    ExampleEchoService *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_input);

};

GType example_echo_service_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *example_echo_service_interface_info (void);
guint example_echo_service_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void example_echo_service_complete_echo (
    ExampleEchoService *object,
    GDBusMethodInvocation *invocation,
    const gchar *output);



/* D-Bus method calls: */
void example_echo_service_call_echo (
    ExampleEchoService *proxy,
    const gchar *arg_input,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean example_echo_service_call_echo_finish (
    ExampleEchoService *proxy,
    gchar **out_output,
    GAsyncResult *res,
    GError **error);

gboolean example_echo_service_call_echo_sync (
    ExampleEchoService *proxy,
    const gchar *arg_input,
    gchar **out_output,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_EXAMPLE_ECHO_SERVICE_PROXY (example_echo_service_proxy_get_type ())
#define EXAMPLE_ECHO_SERVICE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_EXAMPLE_ECHO_SERVICE_PROXY, ExampleEchoServiceProxy))
#define EXAMPLE_ECHO_SERVICE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_EXAMPLE_ECHO_SERVICE_PROXY, ExampleEchoServiceProxyClass))
#define EXAMPLE_ECHO_SERVICE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_EXAMPLE_ECHO_SERVICE_PROXY, ExampleEchoServiceProxyClass))
#define IS_EXAMPLE_ECHO_SERVICE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_EXAMPLE_ECHO_SERVICE_PROXY))
#define IS_EXAMPLE_ECHO_SERVICE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_EXAMPLE_ECHO_SERVICE_PROXY))

typedef struct _ExampleEchoServiceProxy ExampleEchoServiceProxy;
typedef struct _ExampleEchoServiceProxyClass ExampleEchoServiceProxyClass;
typedef struct _ExampleEchoServiceProxyPrivate ExampleEchoServiceProxyPrivate;

struct _ExampleEchoServiceProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ExampleEchoServiceProxyPrivate *priv;
};

struct _ExampleEchoServiceProxyClass
{
  GDBusProxyClass parent_class;
};

GType example_echo_service_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleEchoServiceProxy, g_object_unref)
#endif

void example_echo_service_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ExampleEchoService *example_echo_service_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ExampleEchoService *example_echo_service_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void example_echo_service_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ExampleEchoService *example_echo_service_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ExampleEchoService *example_echo_service_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_EXAMPLE_ECHO_SERVICE_SKELETON (example_echo_service_skeleton_get_type ())
#define EXAMPLE_ECHO_SERVICE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_EXAMPLE_ECHO_SERVICE_SKELETON, ExampleEchoServiceSkeleton))
#define EXAMPLE_ECHO_SERVICE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_EXAMPLE_ECHO_SERVICE_SKELETON, ExampleEchoServiceSkeletonClass))
#define EXAMPLE_ECHO_SERVICE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_EXAMPLE_ECHO_SERVICE_SKELETON, ExampleEchoServiceSkeletonClass))
#define IS_EXAMPLE_ECHO_SERVICE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_EXAMPLE_ECHO_SERVICE_SKELETON))
#define IS_EXAMPLE_ECHO_SERVICE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_EXAMPLE_ECHO_SERVICE_SKELETON))

typedef struct _ExampleEchoServiceSkeleton ExampleEchoServiceSkeleton;
typedef struct _ExampleEchoServiceSkeletonClass ExampleEchoServiceSkeletonClass;
typedef struct _ExampleEchoServiceSkeletonPrivate ExampleEchoServiceSkeletonPrivate;

struct _ExampleEchoServiceSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ExampleEchoServiceSkeletonPrivate *priv;
};

struct _ExampleEchoServiceSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType example_echo_service_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (ExampleEchoServiceSkeleton, g_object_unref)
#endif

ExampleEchoService *example_echo_service_skeleton_new (void);


G_END_DECLS

#endif /* __ECHO_SKELETON_H__ */
